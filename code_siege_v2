/*
 * A simple sketch that maps a single pin on the ESP32 to a single button on the controller
 */

#include <Arduino.h>
#include <BleGamepad.h> // https://github.com/lemmingDev/ESP32-BLE-Gamepad

// Définir le pin RX (GPIO3)
const int pinRX = 3;

// Variables pour stocker l'état
volatile bool risingDetected = false;
volatile bool fallingDetected = false;

int There_is_someone = -1;
unsigned long start_timer;

BleGamepad bleGamepad("ESP32_siege", "C'est bibi & sammy", 100);

#define True 1
#define False 0
#define Waiting -1

// Déclarations des fonctions
void Someone_just_sit();
void Someone_just_left();
void start_game();
void reset_game();

void setup()
{
    Serial.end(); 
    // Configurer le pin RX comme entrée
    pinMode(pinRX, INPUT);
   
    Serial.begin(115200);

    bleGamepad.begin();

  // Attacher les interruptions
  attachInterrupt(digitalPinToInterrupt(pinRX), detectFalling, FALLING);
  attachInterrupt(digitalPinToInterrupt(pinRX), detectRising, RISING);
}

void loop()
{
    if (bleGamepad.isConnected())
    {
      if (There_is_someone == True) {
        Someone_just_sit();
        There_is_someone = Waiting;
      }
      if (There_is_someone == False) {
        Someone_just_left();
        There_is_someone = Waiting;
      }   
    }
}


//
void detectFalling() {
  There_is_someone = True;
}

//
void detectRising() {
  There_is_someone = False;
}

void start_game() {
  bleGamepad.press(BUTTON_1);

  /*bleKeyboard.press(KEY_LEFT_CTRL);  // Appuie sur la touche Ctrl
  bleKeyboard.press('.');            // Appuie sur la touche 'C'
  delay(100);                        // Maintient les touches enfoncées pendant 100 ms
  bleKeyboard.releaseAll();          // Relâche toutes les touches
  delay(400);*/
}

void reset_game() {
  bleGamepad.press(BUTTON_2);

  /*bleKeyboard.press(KEY_LEFT_CTRL);  // Appuie sur la touche Ctrl
  bleKeyboard.press(',');            // Appuie sur la touche 'C'
  delay(100);                        // Maintient les touches enfoncées pendant 100 ms
  bleKeyboard.releaseAll();          // Relâche toutes les touches
  delay(400);*/
}

void Someone_just_sit() {
  start_timer = millis();
  while (millis() - start_timer < 400) {
    if (There_is_someone != True) {
      There_is_someone = Waiting;
      return;
    }
  }
  start_game();
}

void Someone_just_left() {
  start_timer = millis();
  while (millis() - start_timer < 1500) {
    if (There_is_someone != False) {
      There_is_someone = Waiting;
      return;
    }
  }
  reset_game();
}
